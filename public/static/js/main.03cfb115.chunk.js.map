{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","react","components_MissionKey","react_apollo_browser_umd","query","loading","error","data","console","log","launches","map","components_LaunchItem","key","Component","LAUNCH_QUERY","Launch_templateObject","Launch","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","Classnames","client","ApolloClient","uri","App","BrowserRouter","src","logo","alt","style","width","display","margin","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03cfb115.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";","import React from 'react';\nimport classNames from 'classname';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nfunction LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\n    return (\n        <div className=\"ard card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Mission: <span className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                    })}>{mission_name}</span></h4>\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment></p>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link className=\"btn btn-secondary\" to={`/launch/${flight_number}`}>Launch Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LaunchItem;","import React from 'react'\n\nfunction MissionKey() {\n    return (\n        <div className=\"my-3\">\n            <p>\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\n            </p>\n            <p>\n                <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n            </p>\n        </div>\n    )\n}\n\nexport default MissionKey;","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nclass Launches extends Component {\n    render() {\n        return (\n            <Fragment>\n                <h1 className=\"display-4 my-3\">Launches</h1>\n                <MissionKey />\n                <Query query={LAUNCHES_QUERY}>\n                    {\n                        ({ loading, error, data }) => {\n                            if (loading) return <h4>Loading...</h4>\n                            if (error) console.log('error: ', error);\n                            console.log('data: ', data)\n                            return <Fragment>\n                                {\n                                    data.launches.map(launch => {\n                                        return <LaunchItem key={launch.flight_number} launch={launch} />\n                                    })\n                                }\n                            </Fragment>\n                        }\n                    }\n                </Query>\n            </Fragment>\n        )\n    }\n}\n\nexport default Launches;","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from \"react-router-dom\";\nimport Classnames from 'classname';\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!){\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport class Launch extends Component {\n    render() {\n        let { flight_number } = this.props.match.params;\n        flight_number = parseInt(flight_number);\n        return (\n            <Fragment>\n                <Query query={LAUNCH_QUERY} variables={{ flight_number }} >\n                    {\n                        ({ loading, error, data }) => {\n                            if (loading) return <h4>Loading...</h4>\n                            if (error) console.log(error);\n                            console.log('T: ', this.props.match.params);\n                            const { flight_number, mission_name, launch_year, launch_success, rocket: { rocket_id, rocket_name, rocket_type } } = data.launch;\n\n                            return (\n                                <div>\n                                    <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission: </span> {mission_name}</h1>\n                                    <h4 className=\"mb-3\">Launch details: </h4>\n                                    <ul className=\"list-group\">\n                                        <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                                        <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                                        <li className=\"list-group-item\">Launch Successful: <span className={Classnames({\n                                            'text-success': launch_success,\n                                            'text-danger': !launch_success\n                                        })}>{launch_success ? 'YES' : 'NO'}</span></li>\n                                    </ul>\n                                    <h4 className=\"mb-3\">Rocket details: </h4>\n                                    <ul className=\"list-group\">\n                                        <li className=\"list-group-item\">Rocket Id: {rocket_id}</li>\n                                        <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                                        <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                                    </ul>\n                                    <hr />\n                                    <Link to='/' className=\"btn btn-secondary\"> Back </Link>\n                                </div>\n                            )\n                        }\n                    }\n                </Query>\n            </Fragment>\n        )\n    }\n}\n\nexport default Launch\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport './App.css';\nimport logo from './logo.png';\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n  // uri: \"http://localhost:5000/graphql\"\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <BrowserRouter>\n          <div className=\"container\">\n            <img src={logo}\n              alt=\"SpaceX\"\n              style={{ width: 300, display: 'block', margin: 'auto' }} />\n            <Route exact path='/' component={Launches} />\n            <Route path='/launch:flight_number' component={Launch} />\n          </div>\n        </BrowserRouter>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}